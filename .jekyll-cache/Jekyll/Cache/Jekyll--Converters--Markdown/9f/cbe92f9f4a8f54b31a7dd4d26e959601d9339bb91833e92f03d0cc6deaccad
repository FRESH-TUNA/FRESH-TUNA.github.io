I"<h2 id="1-프롤로그">1. 프롤로그</h2>
<p>ORM에서 제공하는 aggregate와 annotate를 활용한 사례를 적어보고자한다.
<br /><br /></p>

<h2 id="2-시나리오-1">2. 시나리오 1</h2>
<p>꽃들에 대한 데이터를 정렬해서 반환하려면 간단하게 order_by를 사용하면 된다.
하지만 평점값은 꽃들이 기본을 가지고 있는 attribute가 아닌 join을 통해 얻어내야 하기때문에
Django 에서 에러를 뿜어낸다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_queryset</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">queryset</span> <span class="o">=</span> <span class="n">Flower</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span>
            <span class="n">star</span><span class="o">=</span><span class="n">Round</span><span class="p">(</span><span class="n">Avg</span><span class="p">(</span><span class="s">'comments__star'</span><span class="p">)))</span>
        <span class="n">ordering</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">GET</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">'ordering'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">ordering</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">ordering</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">'star'</span><span class="p">):</span>
                <span class="n">queryset</span> <span class="o">=</span> <span class="n">queryset</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">ordering</span><span class="p">)</span>
                <span class="k">return</span> <span class="n">queryset</span>
            <span class="k">elif</span> <span class="n">ordering</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">'view'</span><span class="p">):</span>
                <span class="n">queryset</span> <span class="o">=</span> <span class="n">queryset</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">ordering</span><span class="p">)</span>
                <span class="k">return</span> <span class="n">queryset</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">queryset</span> <span class="o">=</span> <span class="n">queryset</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="s">'star'</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">queryset</span>
</code></pre></div></div>
<p>위와 같이 annotate를 통해 queryset애 star라는 attribute를 추가하면 잘작동 된다.
Avg(‘comments__star’)에서 comments는 flower가 가지고 있는 comment manytomanyfield를 의미하고
‘__’ 를 통해 comment의 attribute인 star에 접근할수 있다.
<br /><br /></p>

<h2 id="3-시나리오-2">3. 시나리오 2</h2>

<p>만약 평점들이 붙여진 queryset이 아니라 주어진 flower의 평점만 필요하다면 어떻게 할수 있을끼?</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">flower</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">Flower</span><span class="p">,</span> <span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">star</span> <span class="o">=</span> <span class="n">flower</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">aggregate</span><span class="p">(</span><span class="n">avgs</span><span class="o">=</span><span class="n">Avg</span><span class="p">(</span><span class="n">F</span><span class="p">(</span><span class="s">'star'</span><span class="p">)))</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">'avgs'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
</code></pre></div></div>
<p>위와 같이 aggregate를 통해 queryset이나 model 데이터에서 원하는 계산값을 얻어낼수 있다.
결과값은 dict 형태로 반환되며, 위와 같이 avgs=Avg(F(‘star’)) 처럼 key의 이름을 ‘avgs’로
지정하지 않으면 자동으로 ‘flower__avg’ 형태의 key가 생성된다.</p>
:ET